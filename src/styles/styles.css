/* Style for properties container with header and aligned add button */
.properties-container {
  width: 100%;
  position: relative;
}

.properties-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

.add-property-button {
  position: absolute;
  top: 0;
  right: 0;
}

/* Ensure consistent positioning in both list and grid views */
.properties-list,
.properties-grid {
  width: 100%;
  position: relative;
  padding-top: 10px;
}

/* Add tooltip styling */
[title] {
  position: relative;
  cursor: help;
}

/* Styles for read-only controls */
input[readonly], select[disabled] {
  background-color: var(--vscode-input-disabledBackground);
  color: var(--vscode-input-disabledForeground);
}

/* Modal button styling to ensure cancel buttons are always on the right */
.modal-buttons {
  display: flex;
  justify-content: flex-end; 
  gap: 8px;
  margin-top: 15px;
}

/* Reverse the order of buttons in modal-buttons when cancel button should be rightmost */
.modal-buttons button:last-child:not([id*="cancel" i]):not([id*="Cancel" i]) + button[id*="cancel" i],
.modal-buttons button:last-child:not([id*="cancel" i]):not([id*="Cancel" i]) + button[id*="Cancel" i] {
  order: 2;
}

.modal-buttons button[id*="cancel" i] + button:not([id*="cancel" i]):not([id*="Cancel" i]),
.modal-buttons button[id*="Cancel" i] + button:not([id*="cancel" i]):not([id*="Cancel" i]) {
  order: 2;
}

/* VS Code theme-aware button styling */
button {
  background-color: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
  border: none;
  padding: 8px 16px;
  border-radius: 2px;
  cursor: pointer;
  font-size: 13px;
}

button:hover:not(:disabled) {
  background-color: var(--vscode-button-hoverBackground);
}

button.secondary {
  background-color: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: 1px solid var(--vscode-contrastBorder);
}

button.secondary:hover:not(:disabled) {
  background-color: var(--vscode-button-secondaryHoverBackground);
}

/* Disabled button styling */
button:disabled,
.modal-buttons button:disabled {
  background-color: var(--vscode-button-background) !important;
  color: var(--vscode-button-foreground) !important;
  cursor: not-allowed !important;
  opacity: 0.4 !important;
  border: 1px solid var(--vscode-contrastBorder) !important;
  box-shadow: none !important;
}

button:disabled:hover,
.modal-buttons button:disabled:hover {
  background-color: var(--vscode-button-background) !important;
  color: var(--vscode-button-foreground) !important;
  cursor: not-allowed !important;
  box-shadow: none !important;
}

/* Icon button styling */
button.icon-button {
  background-color: transparent;
  color: var(--vscode-foreground);
  border: none;
  padding: 4px;
  border-radius: 2px;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

button.icon-button:hover:not(:disabled) {
  background-color: var(--vscode-toolbar-hoverBackground);
}

/* Danger/destructive button styling */
button.danger {
  background-color: var(--vscode-inputValidation-errorBackground);
  color: var(--vscode-inputValidation-errorForeground);
  border: 1px solid var(--vscode-inputValidation-errorBorder);
}

button.danger:hover:not(:disabled) {
  background-color: var(--vscode-inputValidation-errorBackground);
  opacity: 0.9;
}

/* Success button styling */
button.success {
  background-color: var(--vscode-testing-iconPassed);
  color: var(--vscode-button-foreground);
}

button.success:hover:not(:disabled) {
  background-color: var(--vscode-testing-iconPassed);
  opacity: 0.9;
}