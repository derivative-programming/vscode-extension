/**
 * Interface for the Report schema structure
 */

import { ReportButtonSchema } from './reportButton.interface';
import { ReportParamSchema } from './reportParam.interface';
import { ReportColumnSchema } from './reportColumn.interface';

export interface ReportSchema {
    name?: string;
    titleText?: string;
    introText?: string;
    isCachingAllowed?: string;
    isButtonDropDownAllowed?: string;
    isCustomSqlUsed?: string;
    ratingLevelColumnName?: string;
    targetChildObject?: string;
    isRatingLevelChangingRowBackgroundColor?: string;
    cacheExpirationInMinutes?: string;
    isPagingAvailable?: string;
    isFilterSectionHidden?: string;
    isFilterSectionCollapsable?: string;
    isBreadcrumbSectionHidden?: string;
    isRefreshButtonHidden?: string;
    isExportButtonsHidden?: string;
    isSchedulingAllowed?: string;
    isFavoriteCreationAllowed?: string;
    isAutoRefresh?: string;
    isAutoRefreshVisible?: string;
    isAutoRefreshFrequencyVisible?: string;
    isAutoRefreshDegraded?: string;
    autoRefreshFrequencyInMinutes?: string;
    initObjectWorkflowName?: string;
    layoutName?: string;
    badgeCountPropertyName?: string;
    codeDescription?: string;
    defaultOrderByColumnName?: string;
    defaultOrderByDescending?: string;
    isHeaderLabelsVisible?: string;
    isHeaderVisible?: string;
    isReportDetailLabelColumnVisible?: string;
    noRowsReturnedText?: string;
    isAuthorizationRequired?: string;
    roleRequired?: string;
    isPage?: string;
    formIntroText?: string;
    isIgnoredInDocumentation?: string;
    defaultPageSize?: string;
    isPageUserSettingsDistinctForApp?: string;
    isFilterPersistant?: string;
    isAzureBlobStorageUsed?: string;
    isAzureTableUsed?: string;
    azureTableNameOverride?: string;
    azureTablePrimaryKeyColumn?: string;
    isAzureTablePrimaryKeyColumnDateTime?: string;
    visualizationType?: string;
    visualizationGridGroupByColumnName?: string;
    visualizationGridGroupByInfoTextColumnName?: string;
    visualizationPieChartSliceValueColumnName?: string;
    visualizationPieChartSliceDescriptionColumnName?: string;
    visualizationLineChartUTCDateTimeColumnName?: string;
    visualizationLineChartValueColumnName?: string;
    visualizationLineChartDescriptionColumnName?: string;
    isVisualizationLineChartGridHorizLineHidden?: string;
    isVisualizationLineChartGridVerticalLineHidden?: string;
    isVisualizationLineChartLegendHidden?: string;
    isVisualizationLineChartStairLines?: string;
    visualizationLineChartGridVerticalMaxValue?: string;
    visualizationLineChartGridVerticalMinValue?: string;
    visualizationLineChartGridVerticalStepValue?: string;
    isVisualizationLineChartVerticalLabelsHidden?: string;
    visualizationLineChartGridVerticalTitle?: string;
    visualizationLineChartGridHorizTitle?: string;
    visualizationLineChartGridVerticalMaxValLabel?: string;
    visualizationLineChartGridVerticalMinValLabel?: string;
    isVisualizationLineChartGridVerticalMaxDynamic?: string;
    visualizationFlowChartSourceNodeCodeColumnName?: string;
    visualizationFlowChartSourceNodeDescriptionColumnName?: string;
    visualizationFlowChartSourceNodeColorColumnName?: string;
    visualizationFlowChartFlowDescriptionColumnName?: string;
    visualizationFlowChartDestinationNodeCodeColumnName?: string;
    visualizationCardViewTitleColumn?: string;
    visualizationCardViewDescriptionColumn?: string;
    visualizationCardViewIsImageAvailable?: string;
    visualizationCardViewImageColumn?: string;
    visualizationCardViewGroupByColumnName?: string;
    visualizationCardViewGroupByInfoTextColumnName?: string;
    visualizationFolderIDColumnName?: string;
    visualizationFolderNameColumnName?: string;
    visualizationFolderParentIDColumnName?: string;
    visualizationFolderIsFolderColumnName?: string;
    visualizationFolderIsDragDropAllowed?: string;
    visualizationFolderDragDropEventContextObjectName?: string;
    visualizationFolderDragDropEventTargetName?: string;
    isBasicHeaderAutomaticallyAdded?: string;
    filteringSqlLogic?: string;
    reportButton?: ReportButtonSchema[];
    reportParam?: ReportParamSchema[];
    reportColumn?: ReportColumnSchema[];
}