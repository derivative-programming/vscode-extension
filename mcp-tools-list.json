[
  {
    "name": "create_user_story",
    "title": "Create User Story",
    "description": "Create a new user story with format validation and add it to the AppDNA model via HTTP bridge. The story text must follow the format: \"A [Role] wants to [action] [object]\" or \"As a [Role], I want to [action] [object]\". Valid actions: view all, view, add, create, update, edit, delete, remove.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "storyText": {
          "type": "string",
          "description": "The user story text following the format: \"A [Role] wants to [action] [object]\" or \"As a [Role], I want to [action] [object]\". Valid actions: view all, view, add, create, update, edit, delete, remove."
        }
      },
      "required": [
        "storyText"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "story": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "storyText": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "storyText"
          ],
          "additionalProperties": false
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "validatedFormat": {
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "list_user_stories",
    "title": "List User Stories",
    "description": "List all user stories from the AppDNA model with optional filtering. Can filter by role, search text, and inclusion of ignored stories. Without filters, returns all non-ignored stories.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "Filter stories by role (e.g., \"Manager\", \"User\"). Extracts role from story text and matches case-insensitively."
        },
        "search_story_text": {
          "type": "string",
          "description": "Search text to filter stories (case-insensitive). Searches only in the story text field."
        },
        "includeIgnored": {
          "type": "boolean",
          "description": "Whether to include stories marked as ignored (isIgnored=\"true\"). Default is false."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "stories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "storyText": {
                "type": "string"
              },
              "isIgnored": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "storyText"
            ],
            "additionalProperties": false
          }
        },
        "count": {
          "type": "number"
        },
        "filters": {
          "type": "object",
          "properties": {
            "role": {
              "type": [
                "string",
                "null"
              ]
            },
            "search_story_text": {
              "type": [
                "string",
                "null"
              ]
            },
            "includeIgnored": {
              "type": "boolean"
            }
          },
          "required": [
            "role",
            "search_story_text",
            "includeIgnored"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "stories",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "update_user_story",
    "title": "Update User Story",
    "description": "Update the isIgnored property of an existing user story. Use this to mark stories as ignored (soft delete) or re-enable them. Story text cannot be changed - create a new story instead if needed.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name (GUID identifier) of the user story to update. Required for exact matching."
        },
        "isIgnored": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Set to \"true\" to mark story as ignored (soft delete), \"false\" to re-enable it."
        }
      },
      "required": [
        "name",
        "isIgnored"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "story": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "storyText": {
              "type": "string"
            },
            "isIgnored": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "storyText",
            "isIgnored"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_user_story_schema",
    "title": "Get User Story Schema",
    "description": "Get the schema definition for user story objects, including field descriptions, types, and an example. This shows the structure of user stories as exposed via MCP tools.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "properties": {},
            "example": {}
          },
          "required": [
            "type",
            "description"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "list_roles",
    "title": "List Roles",
    "description": "List all roles from the Role data object in the AppDNA model",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isActive": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "displayName",
              "description",
              "isActive"
            ],
            "additionalProperties": false
          }
        },
        "count": {
          "type": "number"
        },
        "note": {
          "type": "string"
        },
        "warning": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "roles",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "add_role",
    "title": "Add Role",
    "description": "Add a new role to the Role data object in the AppDNA model. Role name must be in PascalCase format.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the role (required, must be PascalCase, e.g., \"Administrator\", \"DataEntryClerk\")"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "role": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isActive": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "displayName",
            "description",
            "isActive"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "update_role",
    "title": "Update Role",
    "description": "Update an existing role in the Role data object. Can update displayName, description, and/or isActive. Role name must match exactly (case-sensitive).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the role to update (required, case-sensitive)"
        },
        "displayName": {
          "type": "string",
          "description": "New display name for the role (optional)"
        },
        "description": {
          "type": "string",
          "description": "New description for the role (optional)"
        },
        "isActive": {
          "type": "string",
          "description": "Active status: \"true\" or \"false\" (optional)"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "role": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isActive": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "displayName",
            "description",
            "isActive"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "add_lookup_value",
    "title": "Add Lookup Value",
    "description": "Add a new lookup value to any lookup data object in the AppDNA model. Lookup object name must match exactly (case-sensitive) and must be a lookup object (isLookup=\"true\").",
    "inputSchema": {
      "type": "object",
      "properties": {
        "lookupObjectName": {
          "type": "string",
          "description": "Name of the lookup data object (required, case-sensitive, e.g., \"Role\", \"Status\")"
        },
        "name": {
          "type": "string",
          "description": "Name of the lookup value (required, must be PascalCase, e.g., \"ActiveStatus\", \"PendingApproval\")"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the lookup value (optional, auto-generated from name if not provided)"
        },
        "description": {
          "type": "string",
          "description": "Description of the lookup value (optional, auto-generated from name if not provided)"
        },
        "isActive": {
          "type": "string",
          "description": "Active status: \"true\" or \"false\" (optional, defaults to \"true\")"
        }
      },
      "required": [
        "lookupObjectName",
        "name"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "lookupValue": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isActive": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "displayName",
            "description",
            "isActive"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "list_lookup_values",
    "title": "List Lookup Values",
    "description": "List all lookup values from a specific lookup data object in the AppDNA model. Returns name, displayName, description, and isActive for each value.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "lookupObjectName": {
          "type": "string",
          "description": "Name of the lookup data object (required, case-sensitive, e.g., \"Role\", \"Status\")"
        },
        "includeInactive": {
          "type": "boolean",
          "description": "Include inactive lookup values (optional, defaults to false)"
        }
      },
      "required": [
        "lookupObjectName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "lookupObjectName": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isActive": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "displayName",
              "description",
              "isActive"
            ],
            "additionalProperties": false
          }
        },
        "count": {
          "type": "number"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "lookupObjectName",
        "values",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "update_lookup_value",
    "title": "Update Lookup Value",
    "description": "Update an existing lookup value in any lookup data object. Can update displayName, description, and/or isActive. Lookup object name and lookup value name must match exactly (case-sensitive).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "lookupObjectName": {
          "type": "string",
          "description": "Name of the lookup data object (required, case-sensitive, e.g., \"Role\", \"Status\")"
        },
        "name": {
          "type": "string",
          "description": "Name of the lookup value to update (required, case-sensitive)"
        },
        "displayName": {
          "type": "string",
          "description": "New display name for the lookup value (optional)"
        },
        "description": {
          "type": "string",
          "description": "New description for the lookup value (optional)"
        },
        "isActive": {
          "type": "string",
          "description": "Active status: \"true\" or \"false\" (optional)"
        }
      },
      "required": [
        "lookupObjectName",
        "name"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "lookupValue": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "isActive": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "displayName",
            "description",
            "isActive"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_lookup_value_schema",
    "title": "Get Lookup Value Schema",
    "description": "Get the schema definition for lookup values (lookup items) including properties, validation rules, format requirements, and examples. Useful for understanding the structure of lookup values before creating or updating them.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {}
            },
            "validationRules": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "usage": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string"
                },
                "access": {
                  "type": "string"
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "location",
                "access",
                "tools"
              ],
              "additionalProperties": false
            },
            "exampleObjects": {
              "type": "array"
            }
          },
          "required": [
            "type",
            "description",
            "properties",
            "validationRules",
            "usage",
            "exampleObjects"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "schema",
        "note"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_data_object_summary_schema",
    "title": "Get Data Object Summary Schema",
    "description": "Get the schema definition for data objects as returned by list_data_object_summary. Includes properties (name, isLookup, parentObjectName, codeDescription, propCount), validation rules, format requirements, hierarchical relationships, and examples of both regular entities and lookup objects.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {}
            },
            "validationRules": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "usage": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string"
                },
                "access": {
                  "type": "string"
                },
                "modelStructure": {
                  "type": "string"
                },
                "purpose": {
                  "type": "string"
                },
                "hierarchy": {
                  "type": "string"
                }
              },
              "required": [
                "location",
                "access",
                "modelStructure",
                "purpose",
                "hierarchy"
              ],
              "additionalProperties": false
            },
            "tools": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "manipulation": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "related": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "query",
                "manipulation",
                "related"
              ],
              "additionalProperties": false
            },
            "commonPatterns": {
              "type": "object",
              "properties": {
                "regularEntities": {
                  "type": "array"
                },
                "lookupObjects": {
                  "type": "array"
                }
              },
              "required": [
                "regularEntities",
                "lookupObjects"
              ],
              "additionalProperties": false
            },
            "notes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "description",
            "properties",
            "validationRules",
            "usage",
            "tools",
            "commonPatterns",
            "notes"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "schema",
        "note"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_role_schema",
    "title": "Get Role Schema",
    "description": "Get the schema definition specifically for roles in the Role lookup object. Includes properties, validation rules, format requirements, examples, and notes about the Role object structure. Useful for understanding role structure before creating or updating roles.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "objectName": {
              "type": "string"
            },
            "isLookupObject": {
              "type": "boolean"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {}
            },
            "validationRules": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "usage": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string"
                },
                "access": {
                  "type": "string"
                },
                "modelStructure": {
                  "type": "string"
                },
                "purpose": {
                  "type": "string"
                }
              },
              "required": [
                "location",
                "access",
                "modelStructure",
                "purpose"
              ],
              "additionalProperties": false
            },
            "tools": {
              "type": "object",
              "properties": {
                "roleSpecific": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "genericLookup": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "roleSpecific",
                "genericLookup"
              ],
              "additionalProperties": false
            },
            "exampleRoles": {
              "type": "array"
            },
            "notes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "description",
            "objectName",
            "isLookupObject",
            "properties",
            "validationRules",
            "usage",
            "tools",
            "exampleRoles",
            "notes"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "schema",
        "note"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "list_data_object_summary",
    "title": "List Data Object Summary",
    "description": "List summary of all data objects from the AppDNA model with optional search and filters. Returns basic info (name, isLookup, parent, propCount). Search by name (case-insensitive, also searches with spaces removed). Filter by isLookup status or parent object name.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "search_name": {
          "type": "string",
          "description": "Optional search text to filter by object name (case-insensitive, searches with and without spaces)"
        },
        "is_lookup": {
          "type": "string",
          "description": "Optional filter for lookup status: \"true\" or \"false\""
        },
        "parent_object_name": {
          "type": "string",
          "description": "Optional filter for parent object name (exact match, case-insensitive)"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "objects": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "isLookup": {
                "type": "boolean"
              },
              "parentObjectName": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "codeDescription": {
                "type": "string"
              },
              "propCount": {
                "type": "number"
              }
            },
            "required": [
              "name",
              "isLookup",
              "parentObjectName",
              "codeDescription",
              "propCount"
            ],
            "additionalProperties": false
          }
        },
        "count": {
          "type": "number"
        },
        "filters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "is_lookup": {
              "type": [
                "string",
                "null"
              ]
            },
            "parent_object_name": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "search_name",
            "is_lookup",
            "parent_object_name"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        },
        "warning": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "objects",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "list_data_objects",
    "title": "List Data Objects (Full Details)",
    "description": "List all data objects with full details from the AppDNA model including prop arrays. Returns complete object structure (name, isLookup, parent, codeDescription, and prop array with all properties). Search by name (case-insensitive). Filter by isLookup status or parent object name. Use this when you need property details for multiple objects.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "search_name": {
          "type": "string",
          "description": "Optional search text to filter by object name (case-insensitive, searches with and without spaces)"
        },
        "is_lookup": {
          "type": "string",
          "description": "Optional filter for lookup status: \"true\" or \"false\""
        },
        "parent_object_name": {
          "type": "string",
          "description": "Optional filter for parent object name (exact match, case-insensitive)"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "objects": {
          "type": "array"
        },
        "count": {
          "type": "number"
        },
        "filters": {
          "type": "object",
          "properties": {
            "search_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "is_lookup": {
              "type": [
                "string",
                "null"
              ]
            },
            "parent_object_name": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "search_name",
            "is_lookup",
            "parent_object_name"
          ],
          "additionalProperties": false
        },
        "note": {
          "type": "string"
        },
        "warning": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "objects",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_data_object",
    "title": "Get Data Object",
    "description": "Get complete details of a specific data object by name. Returns all properties including the full props array with all property items, lookupItem array if applicable, and all other object metadata. Use this for detailed inspection of a data object structure.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data object to retrieve (case-sensitive, exact match required)"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "dataObject": {},
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_data_object_schema",
    "title": "Get Data Object Schema (Full Details)",
    "description": "Get the schema definition for complete data object structure as returned by get_data_object and list_data_objects. Includes all properties (name, isLookup, parentObjectName, codeDescription), prop array structure with property definitions, validation rules, SQL data types, foreign key indicators, and examples of complete objects with properties.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "schema": {},
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "create_data_object",
    "title": "Create Data Object",
    "description": "Create a new data object in the AppDNA model with validation. Name must be PascalCase. ParentObjectName is required and must be an exact match (case-sensitive) of an existing data object name. Lookup objects (isLookup=\"true\") must have parent \"Pac\".",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the data object (required, must be PascalCase, e.g., \"CustomerOrder\", \"ProductStatus\")"
        },
        "parentObjectName": {
          "type": "string",
          "description": "Parent object name (required, must be exact case-sensitive match of an existing data object name)"
        },
        "isLookup": {
          "type": "string",
          "description": "Whether this is a lookup object: \"true\" or \"false\" (optional, defaults to \"false\"). Lookup objects must have parentObjectName=\"Pac\""
        },
        "codeDescription": {
          "type": "string",
          "description": "Description of the data object and its purpose (optional)"
        }
      },
      "required": [
        "name",
        "parentObjectName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "object": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "parentObjectName": {
              "type": "string"
            },
            "isLookup": {
              "type": "boolean"
            },
            "codeDescription": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "parentObjectName",
            "isLookup",
            "codeDescription"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "update_data_object",
    "title": "Update Data Object",
    "description": "Update an existing data object in the AppDNA model. Currently supports updating codeDescription. Object name must match exactly (case-sensitive).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the data object to update (required, must match exactly case-sensitive)"
        },
        "codeDescription": {
          "type": "string",
          "description": "New description of the data object and its purpose (required)"
        }
      },
      "required": [
        "name",
        "codeDescription"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "object": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "parentObjectName": {
              "type": "string"
            },
            "isLookup": {
              "type": "boolean"
            },
            "codeDescription": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "parentObjectName",
            "isLookup",
            "codeDescription"
          ],
          "additionalProperties": false
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "add_data_object_props",
    "title": "Add Data Object Properties",
    "description": "Add multiple properties (columns) to an existing data object. Each property must have a unique name in PascalCase. Validates property structure including data types and boolean flags. Object name must match exactly (case-sensitive).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "Name of the data object to add properties to (required, must match exactly case-sensitive)"
        },
        "props": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Property name in PascalCase format (required, e.g., \"CustomerID\", \"FirstName\")"
              },
              "sqlServerDBDataType": {
                "type": "string",
                "enum": [
                  "nvarchar",
                  "bit",
                  "datetime",
                  "int",
                  "uniqueidentifier",
                  "money",
                  "bigint",
                  "float",
                  "decimal",
                  "date",
                  "varchar",
                  "text"
                ],
                "description": "SQL Server data type"
              },
              "sqlServerDBDataTypeSize": {
                "type": "string",
                "description": "Data type size (e.g., \"50\", \"100\", \"MAX\" for nvarchar/varchar)"
              },
              "labelText": {
                "type": "string",
                "description": "Human-readable label for UI display"
              },
              "codeDescription": {
                "type": "string",
                "description": "Code description for documentation"
              },
              "defaultValue": {
                "type": "string",
                "description": "Default value for the property"
              },
              "isFK": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Is this a foreign key? Must be \"true\" or \"false\""
              },
              "fkObjectName": {
                "type": "string",
                "description": "Foreign key object name (required if isFK=\"true\")"
              },
              "fkObjectPropertyName": {
                "type": "string",
                "description": "Foreign key property name in referenced object"
              },
              "isFKLookup": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Is this a FK to a lookup object? Must be \"true\" or \"false\""
              },
              "isFKConstraintSuppressed": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Suppress FK constraint in database? Must be \"true\" or \"false\""
              },
              "isEncrypted": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Should value be encrypted? Must be \"true\" or \"false\""
              },
              "isQueryByAvailable": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Enable query filtering? Must be \"true\" or \"false\""
              },
              "forceDBColumnIndex": {
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "description": "Force database index? Must be \"true\" or \"false\""
              },
              "isNotPublishedToSubscriptions": {
                "type": "string",
                "enum": [
                  "",
                  "true",
                  "false"
                ],
                "description": "Exclude from subscriptions? Can be \"\", \"true\", or \"false\""
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          },
          "description": "Array of property definitions to add (required, must be non-empty)"
        }
      },
      "required": [
        "objectName",
        "props"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "object": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "parentObjectName": {
              "type": "string"
            },
            "isLookup": {
              "type": "boolean"
            },
            "codeDescription": {
              "type": "string"
            },
            "propCount": {
              "type": "number"
            }
          },
          "required": [
            "name",
            "parentObjectName",
            "isLookup",
            "codeDescription",
            "propCount"
          ],
          "additionalProperties": false
        },
        "addedCount": {
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "update_data_object_prop",
    "title": "Update Data Object Property",
    "description": "Update an existing property (column) in a data object. Allows updating any property field including data type, labels, FK settings, and flags. Object and property names must match exactly (case-sensitive).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "Name of the data object containing the property (required, must match exactly case-sensitive)"
        },
        "propName": {
          "type": "string",
          "description": "Name of the property to update (required, must match exactly case-sensitive)"
        },
        "sqlServerDBDataType": {
          "type": "string",
          "enum": [
            "nvarchar",
            "bit",
            "datetime",
            "int",
            "uniqueidentifier",
            "money",
            "bigint",
            "float",
            "decimal",
            "date",
            "varchar",
            "text"
          ],
          "description": "SQL Server data type"
        },
        "sqlServerDBDataTypeSize": {
          "type": "string",
          "description": "Data type size (e.g., \"50\", \"100\", \"MAX\" for nvarchar/varchar)"
        },
        "labelText": {
          "type": "string",
          "description": "Human-readable label for UI display"
        },
        "codeDescription": {
          "type": "string",
          "description": "Code description for documentation"
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value for the property"
        },
        "isFK": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Is this a foreign key? Must be \"true\" or \"false\""
        },
        "fkObjectName": {
          "type": "string",
          "description": "Foreign key object name (required if isFK=\"true\")"
        },
        "fkObjectPropertyName": {
          "type": "string",
          "description": "Foreign key property name in referenced object"
        },
        "isFKLookup": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Is this a FK to a lookup object? Must be \"true\" or \"false\""
        },
        "isFKConstraintSuppressed": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Suppress FK constraint in database? Must be \"true\" or \"false\""
        },
        "isEncrypted": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Should value be encrypted? Must be \"true\" or \"false\""
        },
        "isQueryByAvailable": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Enable query filtering? Must be \"true\" or \"false\""
        },
        "forceDBColumnIndex": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "description": "Force database index? Must be \"true\" or \"false\""
        },
        "isNotPublishedToSubscriptions": {
          "type": "string",
          "enum": [
            "",
            "true",
            "false"
          ],
          "description": "Exclude from subscriptions? Can be \"\", \"true\", or \"false\""
        }
      },
      "required": [
        "objectName",
        "propName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "property": {},
        "message": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "get_data_object_usage",
    "title": "Get Data Object Usage",
    "description": "Get detailed usage information for data objects showing where they are referenced across the application. Returns references from forms (owner, target, input controls, output variables), reports (owner, target, columns), flows (owner, input parameters, output variables), and user stories. Optionally filter to a specific data object.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "dataObjectName": {
          "type": "string",
          "description": "Optional: Filter to a specific data object name (case-sensitive). If omitted, returns usage for all data objects."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "usageData": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dataObjectName": {
                "type": "string"
              },
              "referenceType": {
                "type": "string"
              },
              "referencedBy": {
                "type": "string"
              },
              "itemType": {
                "type": "string"
              }
            },
            "required": [
              "dataObjectName",
              "referenceType",
              "referencedBy",
              "itemType"
            ],
            "additionalProperties": false
          }
        },
        "count": {
          "type": "number"
        },
        "filter": {
          "anyOf": [
            {
              "anyOf": [
                {
                  "not": {}
                },
                {
                  "type": "string"
                }
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "note": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "usageData",
        "count"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "secret_word_of_the_day",
    "title": "Secret Word of the Day",
    "description": "Get the secret word of the day, uniquely generated for this MCP server and project",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "word": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "required": [
        "success",
        "word",
        "date",
        "project",
        "note"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_view",
    "title": "Open User Stories View",
    "description": "Opens the user stories list view in the VS Code extension. Shows all user stories with three tabs: \"Stories\" (full list), \"Role Distribution\" (analytics showing which roles use which stories), and \"Role-Based Access\" (security requirements). Supports initialTab parameter with values: \"all\", \"analytics\", \"roleAccess\".",
    "inputSchema": {
      "type": "object",
      "properties": {
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab to show: \"all\" (Stories tab), \"analytics\" (Role Distribution tab), or \"roleAccess\" (Role-Based Access tab)"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_dev_view",
    "title": "Open User Stories Dev View",
    "description": "Opens the development queue view for user stories. Shows eight tabs: \"Dev Queue\" (stories ready for development), \"All Stories\" (complete list), \"Dev Metrics\" (development analytics), \"Dev History\" (completed work tracking), \"Dev Forecast\" (capacity planning), \"Dev Bottlenecks\" (blocked work identification), \"Dev Distribution\" (workload by developer), and \"Dev Trends\" (velocity and throughput over time). Supports initialTab parameter with values: \"devQueue\", \"all\", \"devMetrics\", \"devHistory\", \"devForecast\", \"devBottlenecks\", \"devDistribution\", \"devTrends\".",
    "inputSchema": {
      "type": "object",
      "properties": {
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"devQueue\", \"all\", \"devMetrics\", \"devHistory\", \"devForecast\", \"devBottlenecks\", \"devDistribution\", or \"devTrends\""
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_qa_view",
    "title": "Open User Stories QA View",
    "description": "Opens the QA and testing queue view for user stories. Shows five tabs: \"Details\" (QA details table with filters), \"Board\" (Kanban board view), \"Status Distribution\" (analytics and charts), \"Forecast\" (QA capacity planning and forecasting), and \"Cost\" (cost analysis). Supports initialTab parameter with values: \"details\", \"board\", \"analysis\", \"forecast\", \"cost\".",
    "inputSchema": {
      "type": "object",
      "properties": {
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"details\", \"board\", \"analysis\", \"forecast\", or \"cost\""
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_journey_view",
    "title": "Open User Stories Journey View",
    "description": "Opens the user journey mapping view. Shows the flow of user stories across different stages and touchpoints in the user experience. Helps visualize the end-to-end user journey through the application.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_page_mapping_view",
    "title": "Open User Stories Page Mapping View",
    "description": "Opens the page mapping view for user stories. Shows which pages in the application are associated with which user stories. Helps understand the relationship between user stories and UI pages, useful for impact analysis and navigation planning.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_user_stories_role_requirements_view",
    "title": "Open User Stories Role Requirements View",
    "description": "Opens the role requirements view for user stories. Shows which user roles are required to access and complete each user story. Provides a comprehensive view of role-based access control (RBAC) requirements across all user stories.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_object_details_view",
    "title": "Open Data Object Details View",
    "description": "Opens the details view for a specific data object. Shows three tabs: \"Settings\" (basic configuration), \"Properties\" (field definitions and data types), and \"Lookup Items\" (reference data values if the object is a lookup table). Supports initialTab parameter with values: \"settings\", \"props\", \"lookupItems\". Requires objectName parameter to specify which data object to display.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "Name of the data object to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\", \"props\", or \"lookupItems\""
        }
      },
      "required": [
        "objectName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_data_objects_list_view",
    "title": "Open Data Objects List View",
    "description": "Opens the list view showing all data objects in the application model. Displays object names, types (entity/lookup/junction), descriptions, and key properties. This is the central view for browsing and managing data objects.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_data_object_usage_analysis_view",
    "title": "Open Data Object Usage Analysis View",
    "description": "Opens the usage analysis view for data objects. Shows where each data object is used throughout the application: which forms display it, which pages reference it, which workflows manipulate it, and which APIs expose it. Essential for impact analysis when considering changes to data objects.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_data_object_size_analysis_view",
    "title": "Open Data Object Size Analysis View",
    "description": "Opens the size analysis view for data objects. Shows estimated record counts, average row sizes, and total storage requirements for each data object. Helps with capacity planning and database optimization.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_database_size_forecast_view",
    "title": "Open Database Size Forecast View",
    "description": "Opens the database size forecast view. Projects future database growth based on current data object sizes and estimated growth rates. Shows monthly/yearly projections and helps plan infrastructure capacity.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_form_details_view",
    "title": "Open Form Details View",
    "description": "Opens the details editor for a specific form. Shows four tabs: \"Settings\" (basic configuration), \"Input Controls\" (form fields and input elements), \"Buttons\" (form action buttons), and \"Output Variables\" (data outputs from the form). Requires formName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "formName": {
          "type": "string",
          "description": "Name of the form to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\", \"inputControls\", \"buttons\", or \"outputVariables\""
        }
      },
      "required": [
        "formName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "formName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_pages_list_view",
    "title": "Open Pages List View",
    "description": "Opens the list view showing all pages in the application. Pages are the main UI screens users navigate to. Shows page names, routes, components, layouts, and navigation hierarchy.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_page_details_view",
    "title": "Open Page Details View",
    "description": "Opens the details editor for a specific page. Shows four tabs: \"Settings\" (basic configuration), \"Components\" (UI elements on the page), \"Variables\" (page-level state), and \"Buttons\" (action buttons). Requires pageName parameter to specify which page to display.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "pageName": {
          "type": "string",
          "description": "Name of the page to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\", \"components\", \"variables\", or \"buttons\""
        }
      },
      "required": [
        "pageName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "pageName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_page_preview_view",
    "title": "Open Page Preview View",
    "description": "Opens a live preview of a specific page showing how it will appear when rendered. Includes two tabs: \"Preview\" (rendered view) and \"Source\" (generated HTML/code). Requires pageName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "pageName": {
          "type": "string",
          "description": "Name of the page to preview"
        }
      },
      "required": [
        "pageName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "pageName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_page_init_flows_list_view",
    "title": "Open Page Init Flows List View",
    "description": "Opens the list view showing page initialization flows. These are workflows that run automatically when a page loads, handling data fetching, permissions checks, and initial UI state setup.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_page_init_flow_details_view",
    "title": "Open Page Init Flow Details View",
    "description": "Opens the details editor for a specific page initialization flow. Shows flow settings and output variables. Page init flows run automatically when pages load. Requires flowName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "flowName": {
          "type": "string",
          "description": "Name of the page init flow to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab (if supported)"
        }
      },
      "required": [
        "flowName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "flowName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_general_workflows_list_view",
    "title": "Open General Workflows List View",
    "description": "Opens the list view showing general-purpose workflows. These are reusable business logic workflows that can be triggered from multiple places in the application.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_general_workflow_details_view",
    "title": "Open General Workflow Details View",
    "description": "Opens the details editor for a specific general workflow. Shows workflow settings and input parameters. General workflows are reusable business logic that can be called from multiple places. Requires workflowName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "workflowName": {
          "type": "string",
          "description": "Name of the general workflow to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab (if supported)"
        }
      },
      "required": [
        "workflowName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_workflows_list_view",
    "title": "Open Workflows List View",
    "description": "Opens the comprehensive list view showing all workflows in the application. Workflows define business logic, data processing, and automation. Shows workflow names, types, triggers, and execution flow.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_workflow_details_view",
    "title": "Open Workflow Details View",
    "description": "Opens the details editor for a specific DynaFlow workflow. Shows two tabs: \"Settings\" (workflow configuration) and \"Workflow Tasks\" (the sequence of tasks that make up the workflow). Requires workflowName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "workflowName": {
          "type": "string",
          "description": "Name of the workflow to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\" or \"workflowTasks\""
        }
      },
      "required": [
        "workflowName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_workflow_tasks_list_view",
    "title": "Open Workflow Tasks List View",
    "description": "Opens the list view showing all workflow tasks across all workflows. Tasks are the individual steps within workflows (e.g., data validation, API calls, notifications). Useful for finding and reusing common workflow patterns.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_workflow_task_details_view",
    "title": "Open Workflow Task Details View",
    "description": "Opens the details editor for a specific workflow task. Shows task settings, parameters, conditions, and actions. Requires taskName parameter to specify which workflow task to display.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "taskName": {
          "type": "string",
          "description": "Name of the workflow task to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab (if supported)"
        }
      },
      "required": [
        "taskName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_report_details_view",
    "title": "Open Report Details View",
    "description": "Opens the details editor for a specific report. Shows four tabs: \"Settings\" (report configuration), \"Input Controls\" (parameters and filters), \"Buttons\" (actions and downloads), and \"Output Variables\" (data outputs). Requires reportName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "reportName": {
          "type": "string",
          "description": "Name of the report to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\", \"inputControls\", \"buttons\", or \"outputVars\""
        }
      },
      "required": [
        "reportName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_apis_list_view",
    "title": "Open APIs List View",
    "description": "Opens the list view showing all external API integrations in the application. APIs define connections to external systems and services. Shows API names, endpoints, authentication methods, request/response formats, and usage.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_api_details_view",
    "title": "Open API Details View",
    "description": "Opens the details editor for a specific external API integration. Shows three tabs: \"Settings\" (endpoint configuration, authentication, headers), \"Request/Response\" (API schema definitions and sample data), and \"Error Handling\" (retry logic, fallback strategies). Requires apiName parameter.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "apiName": {
          "type": "string",
          "description": "Name of the API to view"
        },
        "initialTab": {
          "type": "string",
          "description": "Optional initial tab: \"settings\", \"requestResponse\", or \"errorHandling\""
        }
      },
      "required": [
        "apiName"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "apiName": {
          "type": "string"
        },
        "initialTab": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_metrics_analysis_view",
    "title": "Open Metrics Analysis View",
    "description": "Opens the metrics analysis view showing application KPIs and performance metrics. Displays current values, historical trends, and projections. Includes metrics like user adoption, data growth, performance benchmarks, and business outcomes. Features interactive charts and exportable reports.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_lexicon_view",
    "title": "Open Lexicon View",
    "description": "Opens the application lexicon view showing business terminology and definitions. Acts as a glossary of domain-specific terms, acronyms, and concepts used throughout the application. Helps ensure consistent terminology across development teams and documentation.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_change_requests_view",
    "title": "Open Change Requests View",
    "description": "Opens the change requests view showing pending and completed modification requests for the application model. Tracks requested changes, their status, priority, impact assessment, and implementation notes. Useful for managing model evolution and stakeholder feedback.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_model_ai_processing_view",
    "title": "Open Model AI Processing View",
    "description": "Opens the AI processing view for the application model. Shows AI-powered analysis, recommendations, and automated suggestions for improving the model. Includes code generation previews, pattern detection, optimization suggestions, and best practice validations.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_fabrication_blueprint_catalog_view",
    "title": "Open Fabrication Blueprint Catalog View",
    "description": "Opens the blueprint catalog view showing available templates and pre-built components. Blueprints are reusable model patterns that can be applied to quickly add common functionality (e.g., user management, audit logging, file uploads). Shows blueprint descriptions, parameters, and preview capabilities.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_hierarchy_diagram_view",
    "title": "Open Hierarchy Diagram View",
    "description": "Opens the data object hierarchy diagram showing parent-child relationships between data objects. Visualizes the entity relationship model with lines connecting related objects. Useful for understanding data model structure and dependencies.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_page_flow_diagram_view",
    "title": "Open Page Flow Diagram View",
    "description": "Opens the page flow diagram showing navigation paths between pages in the application. Visualizes how users move through the UI with arrows indicating navigation links and transitions. Useful for understanding user experience and site architecture.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_project_settings_view",
    "title": "Open Project Settings View",
    "description": "Opens the project settings view showing configuration options for the current AppDNA project. Includes settings for code generation, database connections, deployment targets, validation rules, and project metadata.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_settings_view",
    "title": "Open Extension Settings View",
    "description": "Opens the VS Code extension settings view for the AppDNA extension. Shows preferences for editor behavior, UI themes, validation levels, auto-save options, and other extension-specific configuration.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_welcome_view",
    "title": "Open Welcome View",
    "description": "Opens the welcome screen showing getting started information, recent projects, documentation links, and quick actions. Ideal for new users or when reopening the extension after a break.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_help_view",
    "title": "Open Help View",
    "description": "Opens the help documentation view showing user guides, tutorials, API references, troubleshooting tips, and support contact information. Searchable documentation for all extension features.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_register_view",
    "title": "Open Register View",
    "description": "Opens the model services registration form. Single-page form for creating a new account with the AppDNA model services. Collects user information, credentials, and organization details.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "open_login_view",
    "title": "Open Login View",
    "description": "Opens the model services login form. Single-page form for authenticating with existing AppDNA model services account. Provides access to cloud features, collaboration, and synchronization.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "view": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "success"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
]