{
  "name": "appdna",
  "publisher": "derivative-programming",
  "displayName": "AppDNA Model Builder",
  "description": "Build application models and generate code for multiple platforms (.NET, Python, Web, Mobile). Professional schema-driven UI with GitHub Copilot integration via Model Context Protocol.",
  "version": "1.0.11",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Programming Languages"
  ],
  "keywords": [
    "code generation",
    "model driven development", 
    "multi-platform",
    "scaffolding",
    "appdna",
    "json schema",
    "copilot",
    "mcp",
    "model context protocol"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/derivative-programming/vscode-extension"
  },
  "bugs": {
    "url": "https://github.com/derivative-programming/vscode-extension/issues"
  },
  "homepage": "https://github.com/derivative-programming/vscode-extension#readme",
  "license": "MIT",
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "activationEvents": [],
  "main": "./dist/extension.js",
  "mcp": "./dist/mcp/stdioBridge.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "appdnaContainer",
          "title": "AppDNA",
          "icon": "./media/dna-strand-tilted-enhanced.svg"
        }
      ]
    },
    "views": {
      "appdnaContainer": [
        {
          "id": "appdna",
          "name": "AppDNA",
          "icon": "$(book)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "appdna.addFile",
          "when": "view == appdna && !appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.saveFile",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.expandAllTopLevel",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.collapseAllTopLevel",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.refreshView",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.showFilter",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation"
        },
        {
          "command": "appdna.clearFilter",
          "when": "view == appdna && appDnaFileExists && appDnaTreeViewFilterActive",
          "group": "navigation"
        },
        {
          "command": "appdna.showHelp",
          "when": "view == appdna",
          "group": "navigation@2"
        },
        {
          "command": "appdna.showWelcome",
          "when": "view == appdna",
          "group": "navigation@3"
        },
        {
          "command": "appdna.showAppDNASettings",
          "when": "view == appdna && appDnaFileExists",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "appdna.addObject",
          "when": "viewItem =~ /dataObjects.*/",
          "group": "inline@1",
          "icon": "$(add)"
        },
        {
          "command": "appdna.addReport",
          "when": "viewItem =~ /reports.*/",
          "group": "inline@1",
          "icon": "$(add)"
        },
        {
          "command": "appdna.addForm",
          "when": "viewItem =~ /forms.*/",
          "group": "inline@1",
          "icon": "$(add)"
        },
        {
          "command": "appdna.showHierarchyDiagram",
          "when": "viewItem =~ /dataObjects.*showHierarchy/",
          "group": "inline",
          "icon": "$(type-hierarchy)"
        },
        {
          "command": "appdna.showPageFlowDiagram",
          "when": "viewItem =~ /pages.*showPageFlow/",
          "group": "inline",
          "icon": "$(list-flat)"
        },
        {
          "command": "appdna.showPagePreview",
          "when": "viewItem =~ /pages.*showPagePreview/",
          "group": "inline",
          "icon": "$(eye)"
        },
        {
          "command": "appdna.pageList",
          "when": "viewItem =~ /pages.*showPageList/",
          "group": "inline",
          "icon": "$(table)"
        },
        {
          "command": "appdna.showReportFilter",
          "when": "viewItem =~ /reports.*showReportFilter/",
          "group": "inline",
          "icon": "$(filter)"
        },
        {
          "command": "appdna.clearReportFilter",
          "when": "viewItem =~ /reports.*showReportFilter/ && appDnaReportFilterActive",
          "group": "inline",
          "icon": "$(clear-all)"
        },
        {
          "command": "appdna.showDataObjectFilter",
          "when": "viewItem =~ /dataObjects.*showDataObjectFilter/",
          "group": "inline",
          "icon": "$(filter)"
        },
        {
          "command": "appdna.clearDataObjectFilter",
          "when": "viewItem =~ /dataObjects.*showDataObjectFilter/ && appDnaDataObjectFilterActive",
          "group": "inline",
          "icon": "$(clear-all)"
        },
        {
          "command": "appdna.showFormFilter",
          "when": "viewItem =~ /forms.*showFormFilter/",
          "group": "inline",
          "icon": "$(filter)"
        },
        {
          "command": "appdna.clearFormFilter",
          "when": "viewItem =~ /forms.*showFormFilter/ && appDnaFormFilterActive",
          "group": "inline",
          "icon": "$(clear-all)"
        }
      ]
    },
    "configuration": {
      "title": "AppDNA",
      "properties": {
        "appDNA.modelServiceUrl": {
          "type": "string",
          "default": "https://modelservicesapi.derivative-programming.com",
          "description": "URL for the external model generation service"
        }
      }
    },
    "commands": [
      {
        "command": "appdna.addFile",
        "title": "New Project Model",
        "icon": "$(add)"
      },
      {
        "command": "appdna.addObject",
        "title": "Add Object",
        "icon": "$(add)"
      },
      {
        "command": "appdna.addReport",
        "title": "Add Report",
        "icon": "$(add)"
      },
      {
        "command": "appdna.addForm",
        "title": "Add Form",
        "icon": "$(add)"
      },
      {
        "command": "appdna.generateCode",
        "title": "Generate Code",
        "icon": "$(code)"
      },
      {
        "command": "appdna.listAllObjects",
        "title": "List All Objects",
        "icon": "$(list-tree)"
      },
      {
        "command": "appdna.listAllReports",
        "title": "List All Reports",
        "icon": "$(table)"
      },
      {
        "command": "appdna.saveFile",
        "title": "Save Model To File",
        "icon": "$(save)"
      },
      {
        "command": "appdna.refreshView",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "appdna.showWelcome",
        "title": "Welcome to AppDNA",
        "icon": "$(home)"
      },
      {
        "command": "appdna.showHelp",
        "title": "Help",
        "icon": "$(question)"
      },
      {
        "command": "appdna.startMCPServer",
        "title": "Start MCP Server",
        "icon": "$(debug-start)"
      },
      {
        "command": "appdna.stopMCPServer",
        "title": "Stop MCP Server",
        "icon": "$(debug-stop)"
      },
      {
        "command": "appdna.startMCPHttpServer",
        "title": "Start MCP HTTP Server",
        "icon": "$(globe)"
      },
      {
        "command": "appdna.stopMCPHttpServer",
        "title": "Stop MCP HTTP Server",
        "icon": "$(close)"
      },
      {
        "command": "appdna.collapseAllTopLevel",
        "title": "Collapse Tree",
        "icon": "$(collapse-all)"
      },
      {
        "command": "appdna.expandAllTopLevel",
        "title": "Expand Tree",
        "icon": "$(expand-all)"
      },
      {
        "command": "appdna.showHierarchyDiagram",
        "title": "Show Hierarchy Diagram",
        "icon": "$(type-hierarchy)"
      },
      {
        "command": "appdna.showPageFlowDiagram",
        "title": "Show Page Flow Diagram",
        "icon": "$(outline-view-icon)"
      },
      {
        "command": "appdna.showPagePreview",
        "title": "Show Page Preview",
        "icon": "$(eye)"
      },
      {
        "command": "appdna.pageList",
        "title": "Show Page List",
        "icon": "$(table)"
      },
      {
        "command": "appdna.showFilter",
        "title": "Filter Tree View",
        "icon": "$(filter)"
      },
      {
        "command": "appdna.clearFilter",
        "title": "Clear Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "appdna.showReportFilter",
        "title": "Filter Reports",
        "icon": "$(filter)"
      },
      {
        "command": "appdna.clearReportFilter",
        "title": "Clear Report Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "appdna.showDataObjectFilter",
        "title": "Filter Data Objects",
        "icon": "$(filter)"
      },
      {
        "command": "appdna.clearDataObjectFilter",
        "title": "Clear Data Object Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "appdna.showFormFilter",
        "title": "Filter Forms",
        "icon": "$(filter)"
      },
      {
        "command": "appdna.clearFormFilter",
        "title": "Clear Form Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "appdna.showAppDNASettings",
        "title": "AppDNA Settings",
        "icon": "$(gear)"
      }
    ],
    "mcpServerDefinitionProviders": [
      {
        "id": "appDNAMcpProvider",
        "label": "AppDNA MCP Server Provider"
      }
    ],
    "keybindings": [
      {
        "command": "appdna.addFile",
        "key": "alt+a n"
      },
      {
        "command": "appdna.saveFile",
        "key": "alt+a s"
      },
      {
        "command": "appdna.addObject",
        "key": "alt+a o"
      },
      {
        "command": "appdna.addReport",
        "key": "alt+a r"
      },
      {
        "command": "appdna.addForm",
        "key": "alt+a f"
      },
      {
        "command": "appdna.refreshView",
        "key": "alt+a t"
      },
      {
        "command": "appdna.expandAllTopLevel",
        "key": "alt+a e"
      },
      {
        "command": "appdna.collapseAllTopLevel",
        "key": "alt+a c"
      },
      {
        "command": "appdna.showFilter",
        "key": "alt+a i"
      },
      {
        "command": "appdna.clearFilter",
        "key": "alt+a x"
      },
      {
        "command": "appdna.showHierarchyDiagram",
        "key": "alt+a h"
      },
      {
        "command": "appdna.showPageFlowDiagram",
        "key": "alt+a p"
      },
      {
        "command": "appdna.showPagePreview",
        "key": "alt+a v"
      },
      {
        "command": "appdna.showAppDNASettings",
        "key": "alt+a g"
      },
      {
        "command": "appdna.showHelp",
        "key": "alt+a q"
      },
      {
        "command": "appdna.showWelcome",
        "key": "alt+a w"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "node ./out/test/runTest.js",
    "cleanup": "node cleanup-js-files.js",
    "test:e2e": "tsc -p ./test-e2e && node ./test-e2e/out/runTest.js",
    "test:e2e:debug": "tsc -p ./test-e2e && node --inspect-brk ./test-e2e/out/runTest.js"
  },
  "devDependencies": {
    "@types/copy-webpack-plugin": "^10.1.3",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.17.30",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.1",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "copy-webpack-plugin": "^13.0.0",
    "eslint": "^9.23.0",
    "glob": "^11.0.1",
    "mocha": "^11.1.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "@babel/core": "^7.22.5",
    "@babel/plugin-transform-react-jsx": "^7.22.5",
    "@babel/preset-env": "^7.22.5",
    "@vscode/codicons": "^0.0.36",
    "ajv": "^6.12.6",
    "babel-loader": "^9.1.2",
    "jsonschema": "^1.5.0",
    "jszip": "^3.10.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  }
}
